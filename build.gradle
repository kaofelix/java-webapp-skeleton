version = '1.0'

apply plugin: 'jetty'

sourceCompatibility = 1.6

// Library Versions
h2dbversion = '+'
hibernateCoreVersion = '+'
hibernateAnnotationsVersion = '+'
hibernateValidatorVersion = '+'
javassistVersion = '+'
jerseyVersion = '+'
junitVersion = '+'
liquibaseVersion = '+'
mockitoVersion = '+'
slf4jVersion = '+'
seleniumVersion = '+'
springVersion = '+'

repositories {
    mavenLocal()

    mavenCentral()
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/unit/java']
        }
    }
    integration {
        java {
            srcDirs = ['src/test/integration/java']
        }
    }
    functional {
        java {
            srcDirs = ['src/test/functional/java']
        }
    }
}

dependencies {

    /* DB */
    compile "com.h2database:h2:$h2dbversion"
    compile "org.hibernate:hibernate-core:$hibernateCoreVersion"
    compile "org.hibernate:hibernate-annotations:$hibernateAnnotationsVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "javassist:javassist:$javassistVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"

    compile "org.liquibase:liquibase-core:$liquibaseVersion"

    /* Web */
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "com.sun.jersey:jersey-core:$jerseyVersion"
    compile "com.sun.jersey:jersey-server:$jerseyVersion"
    compile "com.sun.jersey:jersey-json:$jerseyVersion"

    /* Utilities */
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "org.springframework:spring-context:$springVersion"

    /* Unit Test */
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-all:$mockitoVersion"

    /* Integration Test */
    testCompile "junit:junit:$junitVersion"
    integrationCompile "org.springframework:spring-test:$springVersion"

    /* Functional Test */
    functionalCompile "junit:junit:$junitVersion"
    functionalCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"

}

task jettyDaemon(type: org.gradle.api.plugins.jetty.JettyRun) {
    daemon = true
}

test {
    testReportDir = file('build/reports/tests/unit')
    testResultsDir = file('build/results/tests/unit')
}

task integration(type: Test) {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath
    testReportDir = file('build/reports/tests/integration')
    testResultsDir = file('build/results/tests/integration')
}

task functional(type: Test, dependsOn: jettyDaemon) {
    testClassesDir = sourceSets.functional.output.classesDir
    classpath = sourceSets.functional.runtimeClasspath
    testReportDir = file('build/reports/tests/functional')
    testResultsDir = file('build/results/tests/funtional')
}

